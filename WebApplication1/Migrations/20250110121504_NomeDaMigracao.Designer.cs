// <auto-generated />
using System;
using BlazorShop.Api.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorShop.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250110121504_NomeDaMigracao")]
    partial class NomeDaMigracao
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BlazorApi.Entities.Carrinho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("Carrinhos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 2,
                            UsuarioId = 2
                        });
                });

            modelBuilder.Entity("BlazorApi.Entities.CarrinhoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CarrinhoId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarrinhoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("CarrinhosItens");
                });

            modelBuilder.Entity("BlazorApi.Entities.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("IconCSS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IconCSS = "fas fa-spa",
                            Nome = "Beleza"
                        });
                });

            modelBuilder.Entity("BlazorApi.Entities.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<int>("CategriaId")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ImagemUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Produtos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategriaId = 1,
                            Descricao = "Um kit de beleza do bao",
                            ImagemUrl = "/Imagens/Beleza/Beleza1.png",
                            Nome = "Glossier - Beleza Kit",
                            Preco = 100m,
                            Quantidade = 100
                        },
                        new
                        {
                            Id = 2,
                            CategriaId = 1,
                            Descricao = "Kit completo com os melhores produtos da Fenty Beauty.",
                            ImagemUrl = "/Imagens/Beleza/Beleza2.png",
                            Nome = "Fenty Beauty - Maquiagem Essentials",
                            Preco = 150m,
                            Quantidade = 80
                        },
                        new
                        {
                            Id = 3,
                            CategriaId = 1,
                            Descricao = "Pacote essencial para cuidados com a pele.",
                            ImagemUrl = "/Imagens/Beleza/Beleza3.png",
                            Nome = "Kiehl's - Skincare Basics",
                            Preco = 200m,
                            Quantidade = 60
                        },
                        new
                        {
                            Id = 4,
                            CategriaId = 1,
                            Descricao = "Paleta de sombras versátil e elegante.",
                            ImagemUrl = "/Imagens/Beleza/Beleza4.png",
                            Nome = "Urban Decay - Naked Palette",
                            Preco = 120m,
                            Quantidade = 50
                        },
                        new
                        {
                            Id = 5,
                            CategriaId = 2,
                            Descricao = "Perfume clássico e sofisticado para ocasiões especiais.",
                            ImagemUrl = "/Imagens/Beleza/Beleza5.png",
                            Nome = "Dior - Perfume Miss Dior",
                            Preco = 250m,
                            Quantidade = 40
                        },
                        new
                        {
                            Id = 6,
                            CategriaId = 2,
                            Descricao = "Kit com shampoo, condicionador e máscara hidratante.",
                            ImagemUrl = "/Imagens/Beleza/Beleza6.png",
                            Nome = "L'Oréal - Cuidado com os Cabelos",
                            Preco = 90m,
                            Quantidade = 70
                        });
                });

            modelBuilder.Entity("BlazorApi.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NomeUsuario = "Ze do Repolho"
                        },
                        new
                        {
                            Id = 2,
                            NomeUsuario = "Ze do Alface"
                        });
                });

            modelBuilder.Entity("BlazorApi.Entities.Carrinho", b =>
                {
                    b.HasOne("BlazorApi.Entities.Usuario", null)
                        .WithOne("Carrinho")
                        .HasForeignKey("BlazorApi.Entities.Carrinho", "UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BlazorApi.Entities.CarrinhoItem", b =>
                {
                    b.HasOne("BlazorApi.Entities.Carrinho", "Carrinho")
                        .WithMany("Produtos")
                        .HasForeignKey("CarrinhoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApi.Entities.Produto", "Produto")
                        .WithMany("Produtos")
                        .HasForeignKey("ProdutoId");

                    b.Navigation("Carrinho");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("BlazorApi.Entities.Produto", b =>
                {
                    b.HasOne("BlazorApi.Entities.Categoria", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaId");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("BlazorApi.Entities.Carrinho", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("BlazorApi.Entities.Categoria", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("BlazorApi.Entities.Produto", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("BlazorApi.Entities.Usuario", b =>
                {
                    b.Navigation("Carrinho");
                });
#pragma warning restore 612, 618
        }
    }
}
